name: CI

on:
  push:
    branches: [ master ]
    tags: [ '*' ]
  pull_request:
    branches: [ master ]

jobs:
  lint-test-coverage:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flask-version: ['1.1.4', '2.3.3', '3.1.2']

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: 'poetry'

      - name: Install dependencies
        run: |
          poetry install --no-interaction
          poetry run pip install -U "flask==${{ matrix.flask-version }}"

      - name: Pin compatibility deps for Flask 1.1.x
        if: matrix.flask-version == '1.1.4'
        run: |
          # Jinja2<3 expects markupsafe.soft_unicode which was removed in MarkupSafe>=2.1
          poetry run pip install "Jinja2<3.0" "MarkupSafe<2.1"

      - name: Run pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --all-files

      - name: Run tests with coverage (pytest-cov)
        run: poetry run pytest

      - name: Upload coverage to Codecov
        if: matrix.flask-version == '3.1.2'
        uses: codecov/codecov-action@v5
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

  build-package:
    runs-on: ubuntu-latest
    needs: lint-test-coverage

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry --version

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13
          cache: 'poetry'

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Build package
        run: poetry build

      - name: Twine check
        run: |
          python -m pip install -U twine
          twine check dist/*

      - name: Upload dist package
        uses: actions/upload-artifact@v4
        with:
          name: lazy-flask-dist
          path: dist/
          if-no-files-found: error

  publish:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: build-package
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/lazy-flask/
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/download-artifact@v4
        with:
          name: lazy-flask-dist
          path: dist

      - name: Publish to PyPI (Trusted Publisher)
        uses: pypa/gh-action-pypi-publish@release/v1
        # with:
        #   skip-existing: true
        #   print-hash: true
